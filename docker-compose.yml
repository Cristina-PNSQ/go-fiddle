version: '3'
services:
  proxy:
    build:
      context: cmd
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - kafka
    links:
      - kafka
    environment:
      KAFKA_SERVERS: kafka
      MONGODB: mongodb://mongodb
    networks:
      - host

  api:
    build:
      context: api
      dockerfile: Dockerfile
    ports:
      - 3001:3001
    depends_on:
      - kafka
      - mongodb
    links:
      - kafka
      - mongodb
    environment:
      KAFKA_SERVERS: kafka:9092
      MONGODB_SEVER: mongodb://mongodb
    networks:
      - host

  web:
    build:
      context: web
      dockerfile: Dockerfile
    ports:
      - 3000:80
    depends_on:
      - api
    links:
      - api
    environment:
      REACT_APP_REST_API: http://localhost:3001/
      REACT_APP_WEBSOCKET: ws://localhost:3001/ws
    networks:
      - host

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 32181:32181
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_TICK_TIME: 2000
    extra_hosts:
      - "moby:127.0.0.1"
    networks:
      - host

  kafka:
    build:
      context: kafka
      dockerfile: Dockerfile
    hostname: gofiddle_kafka
    links:
      - zookeeper
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:32181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "request:1:1,response:1:1"
      KAFKA_CREATE_TOPICS_PORT: "9092"
    extra_hosts:
      - "moby:127.0.0.1"
    healthcheck:
      test: exit 1
    networks:
      host:
        aliases:
          - gofiddle_kafka

  mongodb:
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGODB_USER: "username"
      MONGODB_PASS: "password"
    networks:
      - host

networks:
  host:
